import cv2
from ultralytics import YOLO
from ultralytics.utils.plotting import Annotator
import torch
import numpy as np
from picamera2 import Picamera2, Preview

# Load the desired YOLOv8 model
model = "models/yolo/yolov8n.pt"

# Start video capture
picam = Picamera2()
picam.start()

# Define video frame dimensions
frame_width = 600
frame_height = 400

class ObjectDetect:
    """
    Object detection class.

    This class encapsulates object detection functionality, including finding the closest object
    within the frame, drawing bounding boxes, and calculating center coordinates.

    Args:
        model: A YOLOv8 model for object classification

    Methods:
        - detect_bounding_box(frame): Detects the closest object's bounding box in the given frame
          and returns the bounding box coordinates and center.
        - show_bounds(object, frame): Draws a bounding box and center point for the given object
          on the frame.
    """
def __init__(self, model):
    self.model = model



while True:
    frame = picam.capture_array("main")
    if frame is False:
        break
    frame = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)
    cv2.imshow("frame",frame)
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break